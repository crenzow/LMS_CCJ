/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package admin;



import dbConnection.DatabaseConnection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.Date;  // ✅ Correct Date import for SQL
import java.time.LocalDate;  // ✅ For LocalDate operations
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import user.*;
import main.Login;


public class Transactions extends javax.swing.JFrame {

    /**
     * Creates new form Admin
     */
    public Transactions() {
        initComponents();
        issueBook();
        borrowedBook();
        returnedBook();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel6 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        reservationsBTN = new javax.swing.JButton();
        booksBTN = new javax.swing.JButton();
        transactionsBTN = new javax.swing.JButton();
        userBTN = new javax.swing.JButton();
        settlementsBTN = new javax.swing.JButton();
        logoutBTN = new javax.swing.JButton();
        reportsBTN = new javax.swing.JButton();
        logoLBL1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        searchTXT = new javax.swing.JTextField();
        searchBTN = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        borrowerIdTXT = new javax.swing.JTextField();
        dueDateCalendar = new de.wannawork.jcalendar.JCalendarComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        isbnTXT = new javax.swing.JTextField();
        stayeaseLBL11 = new javax.swing.JLabel();
        stayeaseLBL12 = new javax.swing.JLabel();
        stayeaseLBL3 = new javax.swing.JLabel();
        stayeaseLBL13 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        returnSTXT = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        isbnTXT2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        borrowerIdTXT2 = new javax.swing.JTextField();
        returnedBTN = new javax.swing.JButton();
        stayeaseLBL8 = new javax.swing.JLabel();
        stayeaseLBL9 = new javax.swing.JLabel();
        stayeaseLBL2 = new javax.swing.JLabel();
        stayeaseLBL10 = new javax.swing.JLabel();
        btitletxt = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        renewSTXT = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        calCBX = new de.wannawork.jcalendar.JCalendarComboBox();
        borrowerID3 = new javax.swing.JTextField();
        isbntxt = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        renewBTN = new javax.swing.JButton();
        stayeaseLBL5 = new javax.swing.JLabel();
        stayeaseLBL6 = new javax.swing.JLabel();
        stayeaseLBL1 = new javax.swing.JLabel();
        stayeaseLBL7 = new javax.swing.JLabel();

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ADMIN");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(0, 109, 119));
        jPanel2.setForeground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        reservationsBTN.setBackground(new java.awt.Color(131, 197, 190));
        reservationsBTN.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        reservationsBTN.setText("RESERVATIONS");
        reservationsBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reservationsBTNActionPerformed(evt);
            }
        });
        jPanel2.add(reservationsBTN, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 460, 170, 40));

        booksBTN.setBackground(new java.awt.Color(131, 197, 190));
        booksBTN.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        booksBTN.setText("BOOKS");
        booksBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                booksBTNActionPerformed(evt);
            }
        });
        jPanel2.add(booksBTN, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 250, 170, 40));

        transactionsBTN.setBackground(new java.awt.Color(131, 197, 190));
        transactionsBTN.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        transactionsBTN.setText("TRANSACTIONS");
        transactionsBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transactionsBTNActionPerformed(evt);
            }
        });
        jPanel2.add(transactionsBTN, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 320, 170, 40));

        userBTN.setBackground(new java.awt.Color(131, 197, 190));
        userBTN.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        userBTN.setText("USERS");
        userBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userBTNActionPerformed(evt);
            }
        });
        jPanel2.add(userBTN, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 390, 170, 40));

        settlementsBTN.setBackground(new java.awt.Color(131, 197, 190));
        settlementsBTN.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        settlementsBTN.setText("SETTLEMENTS");
        settlementsBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                settlementsBTNActionPerformed(evt);
            }
        });
        jPanel2.add(settlementsBTN, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 530, 170, 40));

        logoutBTN.setBackground(new java.awt.Color(131, 197, 190));
        logoutBTN.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        logoutBTN.setText("LOGOUT");
        logoutBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutBTNActionPerformed(evt);
            }
        });
        jPanel2.add(logoutBTN, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 670, 170, 40));

        reportsBTN.setBackground(new java.awt.Color(131, 197, 190));
        reportsBTN.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        reportsBTN.setText("REPORTS");
        reportsBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reportsBTNActionPerformed(evt);
            }
        });
        jPanel2.add(reportsBTN, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 600, 170, 40));

        logoLBL1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/200whiteLOGO.png"))); // NOI18N
        jPanel2.add(logoLBL1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 170, -1));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 210, 750));

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTabbedPane1.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N

        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel3.add(searchTXT, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 50, 350, 60));

        searchBTN.setBackground(new java.awt.Color(131, 197, 190));
        searchBTN.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        searchBTN.setText("Search");
        searchBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBTNActionPerformed(evt);
            }
        });
        jPanel3.add(searchBTN, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 50, -1, 60));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title", "ISBN", "Availability", "Location"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel3.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, 880, 300));
        jPanel3.add(borrowerIdTXT, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 480, 240, 40));
        jPanel3.add(dueDateCalendar, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 540, 240, 40));

        jLabel1.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        jLabel1.setText("Due Date:");
        jPanel3.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 540, -1, 30));

        jLabel2.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        jLabel2.setText("Borrower Id:");
        jPanel3.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 480, 130, 40));

        jButton2.setBackground(new java.awt.Color(131, 197, 190));
        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton2.setText("Confirm");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 610, 240, 60));

        jLabel5.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        jLabel5.setText("ISBN:");
        jPanel3.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 540, 90, 40));
        jPanel3.add(isbnTXT, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 540, 240, 40));

        stayeaseLBL11.setBackground(new java.awt.Color(0, 109, 119));
        stayeaseLBL11.setFont(new java.awt.Font("Serif", 1, 70)); // NOI18N
        stayeaseLBL11.setForeground(new java.awt.Color(0, 109, 119));
        stayeaseLBL11.setText("P");
        jPanel3.add(stayeaseLBL11, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 60, 70));

        stayeaseLBL12.setBackground(new java.awt.Color(0, 109, 119));
        stayeaseLBL12.setFont(new java.awt.Font("Serif", 1, 36)); // NOI18N
        stayeaseLBL12.setForeground(new java.awt.Color(0, 109, 119));
        stayeaseLBL12.setText("AGE");
        jPanel3.add(stayeaseLBL12, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 20, 90, 40));

        stayeaseLBL3.setBackground(new java.awt.Color(0, 109, 119));
        stayeaseLBL3.setFont(new java.awt.Font("Serif", 1, 70)); // NOI18N
        stayeaseLBL3.setForeground(new java.awt.Color(0, 109, 119));
        stayeaseLBL3.setText("H");
        jPanel3.add(stayeaseLBL3, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 50, 60, -1));

        stayeaseLBL13.setBackground(new java.awt.Color(0, 109, 119));
        stayeaseLBL13.setFont(new java.awt.Font("Serif", 1, 36)); // NOI18N
        stayeaseLBL13.setForeground(new java.awt.Color(0, 109, 119));
        stayeaseLBL13.setText("UB");
        jPanel3.add(stayeaseLBL13, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 70, 60, 60));

        jTabbedPane1.addTab("Issue Book", jPanel3);

        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel4.add(returnSTXT, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 50, 350, 60));

        jButton3.setBackground(new java.awt.Color(131, 197, 190));
        jButton3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton3.setText("Search");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 50, -1, 60));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Title ", "BorrowerID", "Borrower", "ISBN", "Due Date", "Status"
            }
        ));
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);

        jPanel4.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, 880, 380));
        jPanel4.add(isbnTXT2, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 550, 240, 40));

        jLabel3.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        jLabel3.setText("ISBN:");
        jPanel4.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 550, 90, 40));

        jLabel4.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        jLabel4.setText("Borrower Id:");
        jPanel4.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 550, 130, 40));
        jPanel4.add(borrowerIdTXT2, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 550, 240, 40));

        returnedBTN.setBackground(new java.awt.Color(131, 197, 190));
        returnedBTN.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        returnedBTN.setText("Returned");
        returnedBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnedBTNActionPerformed(evt);
            }
        });
        jPanel4.add(returnedBTN, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 610, 230, 60));

        stayeaseLBL8.setBackground(new java.awt.Color(0, 109, 119));
        stayeaseLBL8.setFont(new java.awt.Font("Serif", 1, 70)); // NOI18N
        stayeaseLBL8.setForeground(new java.awt.Color(0, 109, 119));
        stayeaseLBL8.setText("P");
        jPanel4.add(stayeaseLBL8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 60, 70));

        stayeaseLBL9.setBackground(new java.awt.Color(0, 109, 119));
        stayeaseLBL9.setFont(new java.awt.Font("Serif", 1, 36)); // NOI18N
        stayeaseLBL9.setForeground(new java.awt.Color(0, 109, 119));
        stayeaseLBL9.setText("AGE");
        jPanel4.add(stayeaseLBL9, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 20, 90, 40));

        stayeaseLBL2.setBackground(new java.awt.Color(0, 109, 119));
        stayeaseLBL2.setFont(new java.awt.Font("Serif", 1, 70)); // NOI18N
        stayeaseLBL2.setForeground(new java.awt.Color(0, 109, 119));
        stayeaseLBL2.setText("H");
        jPanel4.add(stayeaseLBL2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 50, 60, -1));

        stayeaseLBL10.setBackground(new java.awt.Color(0, 109, 119));
        stayeaseLBL10.setFont(new java.awt.Font("Serif", 1, 36)); // NOI18N
        stayeaseLBL10.setForeground(new java.awt.Color(0, 109, 119));
        stayeaseLBL10.setText("UB");
        jPanel4.add(stayeaseLBL10, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 70, 60, 60));
        jPanel4.add(btitletxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 610, 240, 40));

        jLabel9.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        jLabel9.setText("Title:");
        jPanel4.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 610, 130, 40));

        jTabbedPane1.addTab("Return Book", jPanel4);

        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel5.add(renewSTXT, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 50, 350, 60));

        jButton5.setBackground(new java.awt.Color(131, 197, 190));
        jButton5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton5.setText("Search");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 50, -1, 60));

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Title ", "Borrower ID", "Borrower", "ISBN", "Due Date", "Status"
            }
        ));
        jTable3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable3MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTable3);

        jPanel5.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, 880, 300));

        jLabel6.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        jLabel6.setText("Borrower Id:");
        jPanel5.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 480, 130, 40));

        jLabel7.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        jLabel7.setText("New Due Date:");
        jPanel5.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 540, 130, 40));
        jPanel5.add(calCBX, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 540, 240, 40));
        jPanel5.add(borrowerID3, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 480, 240, 40));
        jPanel5.add(isbntxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 480, 240, 40));

        jLabel8.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        jLabel8.setText("ISBN:");
        jPanel5.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 480, 90, 40));

        renewBTN.setBackground(new java.awt.Color(131, 197, 190));
        renewBTN.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        renewBTN.setText("Renew");
        renewBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                renewBTNActionPerformed(evt);
            }
        });
        jPanel5.add(renewBTN, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 610, 230, 60));

        stayeaseLBL5.setBackground(new java.awt.Color(0, 109, 119));
        stayeaseLBL5.setFont(new java.awt.Font("Serif", 1, 70)); // NOI18N
        stayeaseLBL5.setForeground(new java.awt.Color(0, 109, 119));
        stayeaseLBL5.setText("P");
        jPanel5.add(stayeaseLBL5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 60, 70));

        stayeaseLBL6.setBackground(new java.awt.Color(0, 109, 119));
        stayeaseLBL6.setFont(new java.awt.Font("Serif", 1, 36)); // NOI18N
        stayeaseLBL6.setForeground(new java.awt.Color(0, 109, 119));
        stayeaseLBL6.setText("AGE");
        jPanel5.add(stayeaseLBL6, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 20, 90, 40));

        stayeaseLBL1.setBackground(new java.awt.Color(0, 109, 119));
        stayeaseLBL1.setFont(new java.awt.Font("Serif", 1, 70)); // NOI18N
        stayeaseLBL1.setForeground(new java.awt.Color(0, 109, 119));
        stayeaseLBL1.setText("H");
        jPanel5.add(stayeaseLBL1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 50, 60, -1));

        stayeaseLBL7.setBackground(new java.awt.Color(0, 109, 119));
        stayeaseLBL7.setFont(new java.awt.Font("Serif", 1, 36)); // NOI18N
        stayeaseLBL7.setForeground(new java.awt.Color(0, 109, 119));
        stayeaseLBL7.setText("UB");
        jPanel5.add(stayeaseLBL7, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 70, 60, 60));

        jTabbedPane1.addTab("Renew Book", jPanel5);

        jPanel1.add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 940, 750));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 0, 940, 750));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void reservationsBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reservationsBTNActionPerformed
        Reservations resFrame = new Reservations();
        this.setVisible(false);
        resFrame.setVisible(true);
    }//GEN-LAST:event_reservationsBTNActionPerformed

    private void booksBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_booksBTNActionPerformed
        Books bookFrame = new Books();
        this.setVisible(false);
        bookFrame.setVisible(true);
    }//GEN-LAST:event_booksBTNActionPerformed

    private void transactionsBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transactionsBTNActionPerformed
        
    }//GEN-LAST:event_transactionsBTNActionPerformed

    private void userBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userBTNActionPerformed
        Users userFrame = new Users();
        this.setVisible(false);
        userFrame.setVisible(true);
    }//GEN-LAST:event_userBTNActionPerformed

    private void settlementsBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_settlementsBTNActionPerformed
        // TODO add your handling code here:
        Settlements setFrame = new Settlements();
        this.setVisible(false);
        setFrame.setVisible(true);
    }//GEN-LAST:event_settlementsBTNActionPerformed

    private void searchBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBTNActionPerformed
    // Get the value entered in the searchTXT text field
    String searchValue = searchTXT.getText().trim();

    // Check if the search value is not empty
    if (!searchValue.isEmpty()) {
        try {
            // SQL query to search for books by title using LIKE for partial matches
            String sql = "SELECT bookID, title, author, genre, isbn, publicationYear, quantityAvailable, location FROM book WHERE title LIKE ?";

            // Prepare and execute the query
            try (PreparedStatement ps = DatabaseConnection.getInstance().getConnection().prepareStatement(sql)) {
                ps.setString(1, "%" + searchValue + "%");  // Use '%' for partial matching in the LIKE query

                try (ResultSet rs = ps.executeQuery()) {
                    DefaultTableModel model = (DefaultTableModel) jTable1.getModel(); // Get the table model
                    model.setRowCount(0); // Clear existing data

                    // Check if any records are found
                    while (rs.next()) {
                        Object[] row = {
                            rs.getString("title"),
                            rs.getString("isbn"),
                            rs.getInt("quantityAvailable"),
                            rs.getString("location"),
                        };
                        model.addRow(row); // Add each row to the table
                    }

                    // If no records found, inform the user
                    if (model.getRowCount() == 0) {
                        JOptionPane.showMessageDialog(null, "No books found with the title: " + searchValue);
                    }
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error searching for books: " + e.getMessage());
        }
    } else {
        JOptionPane.showMessageDialog(null, "Please enter a title to search.");
    }

    }//GEN-LAST:event_searchBTNActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    String userID = borrowerIdTXT.getText().trim();
    String isbn = isbnTXT.getText().trim();
    LocalDate borrowDate = LocalDate.now();
    String status = "Borrowed";

    // Get due date from JCalendar and convert it
    java.util.Date utilDate = dueDateCalendar.getDate();
    java.sql.Date sqlDueDate = new java.sql.Date(utilDate.getTime());

    if (userID.isEmpty() || isbn.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Please fill all fields.");
        return;
    }

    String getBookIDQuery = "SELECT bookID FROM book WHERE ISBN = ?";
    String insertQuery = "INSERT INTO transaction (borrowDate, dueDate, status, userID, bookID) VALUES (?, ?, ?, ?, ?)";

    try (
        // Access the connection and prepare the statement for the first query
        PreparedStatement bookStmt = DatabaseConnection.getInstance().getConnection().prepareStatement(getBookIDQuery)
    ) {
        // Get bookID based on ISBN
        bookStmt.setString(1, isbn);
        try (ResultSet rs = bookStmt.executeQuery()) {
            if (rs.next()) {
                int bookID = rs.getInt("bookID");

                // Insert into transaction table
                try (
                    // Access the connection and prepare the statement for the insert query
                    PreparedStatement pst = DatabaseConnection.getInstance().getConnection().prepareStatement(insertQuery)
                ) {
                    pst.setDate(1, java.sql.Date.valueOf(borrowDate)); // borrowDate as java.sql.Date
                    pst.setDate(2, sqlDueDate); // dueDate from JCalendar
                    pst.setString(3, status);
                    pst.setInt(4, Integer.parseInt(userID));
                    pst.setInt(5, bookID);

                    int result = pst.executeUpdate();

                    if (result > 0) {
                        JOptionPane.showMessageDialog(this, "Book Borrowed Successfully!");
                        borrowerIdTXT.setText("");
                        isbnTXT.setText("");
                    } else {
                        JOptionPane.showMessageDialog(this, "Borrowing Failed.");
                    }
                }
            } else {
                JOptionPane.showMessageDialog(this, "Book ISBN not found.");
            }
        }

    } catch (Exception ex) {
        JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage());
    }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        int selectedRow = jTable1.getSelectedRow();
         if (selectedRow != -1) {
        // Set text fields
        isbnTXT.setText(jTable1.getValueAt(selectedRow, 1).toString());  // Book Title
    }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        int selectedRow = jTable2.getSelectedRow();
         if (selectedRow != -1) {
        // Set text fields
        isbnTXT2.setText(jTable2.getValueAt(selectedRow, 3).toString());  
        btitletxt.setText(jTable2.getValueAt(selectedRow, 0).toString()); 
        borrowerIdTXT2.setText(jTable2.getValueAt(selectedRow, 1).toString());
    }
    }//GEN-LAST:event_jTable2MouseClicked

    private void returnedBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnedBTNActionPerformed
        // Fetch data from text fields
    String borrowerID = borrowerIdTXT2.getText().trim();
    String isbn = isbnTXT2.getText().trim();
    String title = btitletxt.getText().trim();

    // Validate input fields
    if (borrowerID.isEmpty() || isbn.isEmpty() || title.isEmpty()) {
        JOptionPane.showMessageDialog(null, "Please fill in Borrower ID, ISBN, and Title.");
        return;
    }

    String sql = "UPDATE transaction " +
                 "SET status = 'Returned', returnDate = CURRENT_DATE() " +
                 "WHERE userID = ? AND bookID = (SELECT bookID FROM book WHERE isbn = ?) AND status = 'Borrowed'";

    try (PreparedStatement ps = DatabaseConnection.getInstance().getConnection().prepareStatement(sql)) {
        ps.setInt(1, Integer.parseInt(borrowerID)); // borrower ID
        ps.setString(2, isbn); // ISBN

        int updated = ps.executeUpdate();

        if (updated > 0) {
            JOptionPane.showMessageDialog(null, "Book marked as Returned");
            borrowedBook(); // Refresh the table
            clearFields();  // Clear input fields after returning
        } else {
            JOptionPane.showMessageDialog(null, "No matching borrowed book found or it is already returned.");
        }
    } catch (SQLException | NumberFormatException ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(null, "Error: " + ex.getMessage());
    }
    }//GEN-LAST:event_returnedBTNActionPerformed

    private void jTable3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable3MouseClicked
        int selectedRow = jTable3.getSelectedRow();
         if (selectedRow != -1) {
        // Set text fields
        borrowerID3.setText(jTable3.getValueAt(selectedRow, 1).toString());  
        isbntxt.setText(jTable3.getValueAt(selectedRow, 3).toString());  
       
    }
    }//GEN-LAST:event_jTable3MouseClicked

    private void renewBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_renewBTNActionPerformed
        // TODO add your handling code here:
        String userID = borrowerID3.getText().trim();
    String isbn = isbntxt.getText().trim();
    LocalDate borrowDate = LocalDate.now();
    String status = "Borrowed";

    // Get due date from JCalendar and convert it
    java.util.Date utilDate = calCBX.getDate();
    java.sql.Date sqlDueDate = new java.sql.Date(utilDate.getTime());

    if (userID.isEmpty() || isbn.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Please fill all fields.");
        return;
    }

    String getBookIDQuery = "SELECT bookID FROM book WHERE ISBN = ?";
    String insertQuery = "INSERT INTO transaction (borrowDate, dueDate, status, userID, bookID) VALUES (?, ?, ?, ?, ?)";

    try (
        // Access the connection and prepare the statement for the first query
        PreparedStatement bookStmt = DatabaseConnection.getInstance().getConnection().prepareStatement(getBookIDQuery)
    ) {
        // Get bookID based on ISBN
        bookStmt.setString(1, isbn);
        try (ResultSet rs = bookStmt.executeQuery()) {
            if (rs.next()) {
                int bookID = rs.getInt("bookID");

                // Insert into transaction table
                try (
                    // Access the connection and prepare the statement for the insert query
                    PreparedStatement pst = DatabaseConnection.getInstance().getConnection().prepareStatement(insertQuery)
                ) {
                    pst.setDate(1, java.sql.Date.valueOf(borrowDate)); // borrowDate as java.sql.Date
                    pst.setDate(2, sqlDueDate); // dueDate from JCalendar
                    pst.setString(3, status);
                    pst.setInt(4, Integer.parseInt(userID));
                    pst.setInt(5, bookID);

                    int result = pst.executeUpdate();

                    if (result > 0) {
                        JOptionPane.showMessageDialog(this, "Book Borrowed Successfully!");
                        returnedBook();
                        borrowerIdTXT.setText("");
                        isbnTXT.setText("");
                    } else {
                        JOptionPane.showMessageDialog(this, "Borrowing Failed.");
                    }
                }
            } else {
                JOptionPane.showMessageDialog(this, "Book ISBN not found.");
            }
        }

    } catch (Exception ex) {
        JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage());
    }
    }//GEN-LAST:event_renewBTNActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        
        String searchValue = returnSTXT.getText().trim();

    // Check if the search value is not empty
    if (!searchValue.isEmpty()) {
        try {
            // SQL query to search for books by title using LIKE for partial matches
        String sql = "SELECT u.userID, b.title, u.fullName, b.isbn, t.dueDate, t.status " +
                 "FROM transaction t " +
                 "JOIN book b ON t.bookID = b.bookID " +
                 "JOIN user u ON t.userID = u.userID " +
                 "WHERE t.status = 'Borrowed' and title LIKE ?";
            // Prepare and execute the query
            try (PreparedStatement ps = DatabaseConnection.getInstance().getConnection().prepareStatement(sql)) {
                ps.setString(1, "%" + searchValue + "%");  // Use '%' for partial matching in the LIKE query

                try (ResultSet rs = ps.executeQuery()) {
                    DefaultTableModel model = (DefaultTableModel) jTable2.getModel(); // Get the table model
                    model.setRowCount(0); // Clear existing data

                    // Check if any records are found
                    while (rs.next()) {
                        Object[] row = {
                            rs.getString("title"),
                            rs.getInt("userID"), 
                            rs.getString("fullName"),
                            rs.getString("isbn"),
                            rs.getDate("dueDate"),
                            rs.getString("status")
                        };
                        model.addRow(row); // Add each row to the table
                    }

                    // If no records found, inform the user
                    if (model.getRowCount() == 0) {
                        JOptionPane.showMessageDialog(null, "No books found with the title: " + searchValue);
                    }
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error searching for books: " + e.getMessage());
        }
    } else {
        JOptionPane.showMessageDialog(null, "Please enter a title to search.");
    }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        
         String searchValue = renewSTXT.getText().trim();

    // Check if the search value is not empty
    if (!searchValue.isEmpty()) {
        try {
            // SQL query to search for books by title using LIKE for partial matches
        String sql = "select b.title, u.userID, u.fullName, b.isbn, t.dueDate, t.status from transaction t join book b on t.bookID = b.bookID join user u on t.userID = u.userID where status = 'Returned' and title like ?";
            // Prepare and execute the query
            try (PreparedStatement ps = DatabaseConnection.getInstance().getConnection().prepareStatement(sql)) {
                ps.setString(1, "%" + searchValue + "%");  // Use '%' for partial matching in the LIKE query

                try (ResultSet rs = ps.executeQuery()) {
                    DefaultTableModel model = (DefaultTableModel) jTable3.getModel(); // Get the table model
                    model.setRowCount(0); // Clear existing data

                    // Check if any records are found
                    while (rs.next()) {
                        Object[] row = {
                            rs.getString("title"),
                            rs.getInt("userID"),
                            rs.getString("fullName"),
                            rs.getString("isbn"),
                            rs.getDate("dueDate"),
                            rs.getString("status")
                        };
                        model.addRow(row); // Add each row to the table
                    }

                    // If no records found, inform the user
                    if (model.getRowCount() == 0) {
                        JOptionPane.showMessageDialog(null, "No books found with the title: " + searchValue);
                    }
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error searching for books: " + e.getMessage());
        }
    } else {
        JOptionPane.showMessageDialog(null, "Please enter a title to search.");
    }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void logoutBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutBTNActionPerformed
        // TODO add your handling code here:
        Login loginFrame = new Login();
        this.setVisible(false);
        loginFrame.setVisible(true);
    }//GEN-LAST:event_logoutBTNActionPerformed

    private void reportsBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportsBTNActionPerformed
        // TODO add your handling code here:
        Reports reportFrame = new Reports();
        this.setVisible(false);
        reportFrame.setVisible(true);
    }//GEN-LAST:event_reportsBTNActionPerformed
    
    private void clearFields() {
    borrowerIdTXT2.setText("");
    isbnTXT2.setText("");
    btitletxt.setText("");
}

    public void issueBook() {
    String sql = "SELECT bookID, title, author, genre, isbn, publicationYear, quantityAvailable, location FROM book";

    try (PreparedStatement ps = DatabaseConnection.getInstance().getConnection().prepareStatement(sql);
         ResultSet rs = ps.executeQuery()) {

        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0); // Clear existing data

        while (rs.next()) {
            Object[] row = {
                
                rs.getString("title"),
                rs.getString("isbn"),
                rs.getInt("quantityAvailable"),
                rs.getString("location"),
                    
            };
            model.addRow(row);
        }

    } catch (SQLException e) {
        e.printStackTrace();
    }
}
      
    public void borrowedBook() {
    String sql = "SELECT u.userID, b.title, u.fullName, b.isbn, t.dueDate, t.status " +
                 "FROM transaction t " +
                 "JOIN book b ON t.bookID = b.bookID " +
                 "JOIN user u ON t.userID = u.userID " +
                 "WHERE t.status = 'Borrowed'";

    try (PreparedStatement ps = DatabaseConnection.getInstance().getConnection().prepareStatement(sql);
         ResultSet rs = ps.executeQuery()) {

        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
        model.setRowCount(0); // Clear existing data

        while (rs.next()) {
            Object[] row = {
                rs.getString("title"),
                rs.getInt("userID"), 
                rs.getString("fullName"),
                rs.getString("isbn"),
                rs.getDate("dueDate"),
                rs.getString("status")
            };
            model.addRow(row);
        }

    } catch (SQLException e) {
        e.printStackTrace();
    }
}
    public void returnedBook() {
    String sql = "select b.title, u.userID, u.fullName, b.isbn, t.dueDate, t.status from transaction t join book b on t.bookID = b.bookID join user u on t.userID = u.userID where status = 'Returned'";

    try (PreparedStatement ps = DatabaseConnection.getInstance().getConnection().prepareStatement(sql);
         ResultSet rs = ps.executeQuery()) {

        DefaultTableModel model = (DefaultTableModel) jTable3.getModel();
        model.setRowCount(0); // Clear existing data

        while (rs.next()) {
            Object[] row = {
                
                rs.getString("title"),
                rs.getInt("userID"),
                rs.getString("fullName"),
                rs.getString("isbn"),
                rs.getDate("dueDate"),
                rs.getString("status")
                    
            };
            model.addRow(row);
        }

    } catch (SQLException e) {
        e.printStackTrace();
    }
}
    

    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Transactions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Transactions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Transactions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Transactions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Transactions().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton booksBTN;
    private javax.swing.JTextField borrowerID3;
    private javax.swing.JTextField borrowerIdTXT;
    private javax.swing.JTextField borrowerIdTXT2;
    private javax.swing.JTextField btitletxt;
    private de.wannawork.jcalendar.JCalendarComboBox calCBX;
    private de.wannawork.jcalendar.JCalendarComboBox dueDateCalendar;
    private javax.swing.JTextField isbnTXT;
    private javax.swing.JTextField isbnTXT2;
    private javax.swing.JTextField isbntxt;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JLabel logoLBL1;
    private javax.swing.JButton logoutBTN;
    private javax.swing.JButton renewBTN;
    private javax.swing.JTextField renewSTXT;
    private javax.swing.JButton reportsBTN;
    private javax.swing.JButton reservationsBTN;
    private javax.swing.JTextField returnSTXT;
    private javax.swing.JButton returnedBTN;
    private javax.swing.JButton searchBTN;
    private javax.swing.JTextField searchTXT;
    private javax.swing.JButton settlementsBTN;
    private javax.swing.JLabel stayeaseLBL1;
    private javax.swing.JLabel stayeaseLBL10;
    private javax.swing.JLabel stayeaseLBL11;
    private javax.swing.JLabel stayeaseLBL12;
    private javax.swing.JLabel stayeaseLBL13;
    private javax.swing.JLabel stayeaseLBL2;
    private javax.swing.JLabel stayeaseLBL3;
    private javax.swing.JLabel stayeaseLBL5;
    private javax.swing.JLabel stayeaseLBL6;
    private javax.swing.JLabel stayeaseLBL7;
    private javax.swing.JLabel stayeaseLBL8;
    private javax.swing.JLabel stayeaseLBL9;
    private javax.swing.JButton transactionsBTN;
    private javax.swing.JButton userBTN;
    // End of variables declaration//GEN-END:variables
}
